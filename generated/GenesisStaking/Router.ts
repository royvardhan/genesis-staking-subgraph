// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Recovered extends ethereum.Event {
  get params(): Recovered__Params {
    return new Recovered__Params(this);
  }
}

export class Recovered__Params {
  _event: Recovered;

  constructor(event: Recovered) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RouterSwap extends ethereum.Event {
  get params(): RouterSwap__Params {
    return new RouterSwap__Params(this);
  }
}

export class RouterSwap__Params {
  _event: RouterSwap;

  constructor(event: RouterSwap) {
    this._event = event;
  }

  get tokenIn(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenOut(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amountIn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amountOut(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class UpdatedAdapters extends ethereum.Event {
  get params(): UpdatedAdapters__Params {
    return new UpdatedAdapters__Params(this);
  }
}

export class UpdatedAdapters__Params {
  _event: UpdatedAdapters;

  constructor(event: UpdatedAdapters) {
    this._event = event;
  }

  get _newAdapters(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }
}

export class UpdatedFeeClaimer extends ethereum.Event {
  get params(): UpdatedFeeClaimer__Params {
    return new UpdatedFeeClaimer__Params(this);
  }
}

export class UpdatedFeeClaimer__Params {
  _event: UpdatedFeeClaimer;

  constructor(event: UpdatedFeeClaimer) {
    this._event = event;
  }

  get oldFeeClaimer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newFeeClaimer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdatedMinFee extends ethereum.Event {
  get params(): UpdatedMinFee__Params {
    return new UpdatedMinFee__Params(this);
  }
}

export class UpdatedMinFee__Params {
  _event: UpdatedMinFee;

  constructor(event: UpdatedMinFee) {
    this._event = event;
  }

  get oldMinFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newMinFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdatedTrustedTokens extends ethereum.Event {
  get params(): UpdatedTrustedTokens__Params {
    return new UpdatedTrustedTokens__Params(this);
  }
}

export class UpdatedTrustedTokens__Params {
  _event: UpdatedTrustedTokens;

  constructor(event: UpdatedTrustedTokens) {
    this._event = event;
  }

  get newTrustedTokens(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }
}

export class Router__findBestPathResultValue0Struct extends ethereum.Tuple {
  get amounts(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get adapters(): Array<Address> {
    return this[1].toAddressArray();
  }

  get path(): Array<Address> {
    return this[2].toAddressArray();
  }

  get gasEstimate(): BigInt {
    return this[3].toBigInt();
  }
}

export class Router__findBestPathWithGasResultValue0Struct extends ethereum.Tuple {
  get amounts(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get adapters(): Array<Address> {
    return this[1].toAddressArray();
  }

  get path(): Array<Address> {
    return this[2].toAddressArray();
  }

  get gasEstimate(): BigInt {
    return this[3].toBigInt();
  }
}

export class Router__queryNoSplitResultValue0Struct extends ethereum.Tuple {
  get adapter(): Address {
    return this[0].toAddress();
  }

  get tokenIn(): Address {
    return this[1].toAddress();
  }

  get tokenOut(): Address {
    return this[2].toAddress();
  }

  get amountOut(): BigInt {
    return this[3].toBigInt();
  }
}

export class Router__queryNoSplit1ResultValue0Struct extends ethereum.Tuple {
  get adapter(): Address {
    return this[0].toAddress();
  }

  get tokenIn(): Address {
    return this[1].toAddress();
  }

  get tokenOut(): Address {
    return this[2].toAddress();
  }

  get amountOut(): BigInt {
    return this[3].toBigInt();
  }
}

export class Router extends ethereum.SmartContract {
  static bind(address: Address): Router {
    return new Router("Router", address);
  }

  ADAPTERS(param0: BigInt): Address {
    let result = super.call("ADAPTERS", "ADAPTERS(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_ADAPTERS(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ADAPTERS", "ADAPTERS(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  FEE_CLAIMER(): Address {
    let result = super.call("FEE_CLAIMER", "FEE_CLAIMER():(address)", []);

    return result[0].toAddress();
  }

  try_FEE_CLAIMER(): ethereum.CallResult<Address> {
    let result = super.tryCall("FEE_CLAIMER", "FEE_CLAIMER():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  FEE_DENOMINATOR(): BigInt {
    let result = super.call(
      "FEE_DENOMINATOR",
      "FEE_DENOMINATOR():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_FEE_DENOMINATOR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "FEE_DENOMINATOR",
      "FEE_DENOMINATOR():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAINTAINER_ROLE(): Bytes {
    let result = super.call(
      "MAINTAINER_ROLE",
      "MAINTAINER_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MAINTAINER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MAINTAINER_ROLE",
      "MAINTAINER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MIN_FEE(): BigInt {
    let result = super.call("MIN_FEE", "MIN_FEE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MIN_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MIN_FEE", "MIN_FEE():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  NAME(): string {
    let result = super.call("NAME", "NAME():(string)", []);

    return result[0].toString();
  }

  try_NAME(): ethereum.CallResult<string> {
    let result = super.tryCall("NAME", "NAME():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  NATIVE(): Address {
    let result = super.call("NATIVE", "NATIVE():(address)", []);

    return result[0].toAddress();
  }

  try_NATIVE(): ethereum.CallResult<Address> {
    let result = super.tryCall("NATIVE", "NATIVE():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  TRUSTED_TOKENS(param0: BigInt): Address {
    let result = super.call(
      "TRUSTED_TOKENS",
      "TRUSTED_TOKENS(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_TRUSTED_TOKENS(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "TRUSTED_TOKENS",
      "TRUSTED_TOKENS(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  WNATIVE(): Address {
    let result = super.call("WNATIVE", "WNATIVE():(address)", []);

    return result[0].toAddress();
  }

  try_WNATIVE(): ethereum.CallResult<Address> {
    let result = super.tryCall("WNATIVE", "WNATIVE():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  adaptersCount(): BigInt {
    let result = super.call("adaptersCount", "adaptersCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_adaptersCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "adaptersCount",
      "adaptersCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  findBestPath(
    _amountIn: BigInt,
    _tokenIn: Address,
    _tokenOut: Address,
    _maxSteps: BigInt
  ): Router__findBestPathResultValue0Struct {
    let result = super.call(
      "findBestPath",
      "findBestPath(uint256,address,address,uint256):((uint256[],address[],address[],uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromAddress(_tokenIn),
        ethereum.Value.fromAddress(_tokenOut),
        ethereum.Value.fromUnsignedBigInt(_maxSteps)
      ]
    );

    return changetype<Router__findBestPathResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_findBestPath(
    _amountIn: BigInt,
    _tokenIn: Address,
    _tokenOut: Address,
    _maxSteps: BigInt
  ): ethereum.CallResult<Router__findBestPathResultValue0Struct> {
    let result = super.tryCall(
      "findBestPath",
      "findBestPath(uint256,address,address,uint256):((uint256[],address[],address[],uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromAddress(_tokenIn),
        ethereum.Value.fromAddress(_tokenOut),
        ethereum.Value.fromUnsignedBigInt(_maxSteps)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Router__findBestPathResultValue0Struct>(value[0].toTuple())
    );
  }

  findBestPathWithGas(
    _amountIn: BigInt,
    _tokenIn: Address,
    _tokenOut: Address,
    _maxSteps: BigInt,
    _gasPrice: BigInt
  ): Router__findBestPathWithGasResultValue0Struct {
    let result = super.call(
      "findBestPathWithGas",
      "findBestPathWithGas(uint256,address,address,uint256,uint256):((uint256[],address[],address[],uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromAddress(_tokenIn),
        ethereum.Value.fromAddress(_tokenOut),
        ethereum.Value.fromUnsignedBigInt(_maxSteps),
        ethereum.Value.fromUnsignedBigInt(_gasPrice)
      ]
    );

    return changetype<Router__findBestPathWithGasResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_findBestPathWithGas(
    _amountIn: BigInt,
    _tokenIn: Address,
    _tokenOut: Address,
    _maxSteps: BigInt,
    _gasPrice: BigInt
  ): ethereum.CallResult<Router__findBestPathWithGasResultValue0Struct> {
    let result = super.tryCall(
      "findBestPathWithGas",
      "findBestPathWithGas(uint256,address,address,uint256,uint256):((uint256[],address[],address[],uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromAddress(_tokenIn),
        ethereum.Value.fromAddress(_tokenOut),
        ethereum.Value.fromUnsignedBigInt(_maxSteps),
        ethereum.Value.fromUnsignedBigInt(_gasPrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Router__findBestPathWithGasResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  queryAdapter(
    _amountIn: BigInt,
    _tokenIn: Address,
    _tokenOut: Address,
    _index: i32
  ): BigInt {
    let result = super.call(
      "queryAdapter",
      "queryAdapter(uint256,address,address,uint8):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromAddress(_tokenIn),
        ethereum.Value.fromAddress(_tokenOut),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_index))
      ]
    );

    return result[0].toBigInt();
  }

  try_queryAdapter(
    _amountIn: BigInt,
    _tokenIn: Address,
    _tokenOut: Address,
    _index: i32
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "queryAdapter",
      "queryAdapter(uint256,address,address,uint8):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromAddress(_tokenIn),
        ethereum.Value.fromAddress(_tokenOut),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_index))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  queryNoSplit(
    _amountIn: BigInt,
    _tokenIn: Address,
    _tokenOut: Address,
    _options: Array<i32>
  ): Router__queryNoSplitResultValue0Struct {
    let result = super.call(
      "queryNoSplit",
      "queryNoSplit(uint256,address,address,uint8[]):((address,address,address,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromAddress(_tokenIn),
        ethereum.Value.fromAddress(_tokenOut),
        ethereum.Value.fromI32Array(_options)
      ]
    );

    return changetype<Router__queryNoSplitResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_queryNoSplit(
    _amountIn: BigInt,
    _tokenIn: Address,
    _tokenOut: Address,
    _options: Array<i32>
  ): ethereum.CallResult<Router__queryNoSplitResultValue0Struct> {
    let result = super.tryCall(
      "queryNoSplit",
      "queryNoSplit(uint256,address,address,uint8[]):((address,address,address,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromAddress(_tokenIn),
        ethereum.Value.fromAddress(_tokenOut),
        ethereum.Value.fromI32Array(_options)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Router__queryNoSplitResultValue0Struct>(value[0].toTuple())
    );
  }

  queryNoSplit1(
    _amountIn: BigInt,
    _tokenIn: Address,
    _tokenOut: Address
  ): Router__queryNoSplit1ResultValue0Struct {
    let result = super.call(
      "queryNoSplit",
      "queryNoSplit(uint256,address,address):((address,address,address,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromAddress(_tokenIn),
        ethereum.Value.fromAddress(_tokenOut)
      ]
    );

    return changetype<Router__queryNoSplit1ResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_queryNoSplit1(
    _amountIn: BigInt,
    _tokenIn: Address,
    _tokenOut: Address
  ): ethereum.CallResult<Router__queryNoSplit1ResultValue0Struct> {
    let result = super.tryCall(
      "queryNoSplit",
      "queryNoSplit(uint256,address,address):((address,address,address,uint256))",
      [
        ethereum.Value.fromUnsignedBigInt(_amountIn),
        ethereum.Value.fromAddress(_tokenIn),
        ethereum.Value.fromAddress(_tokenOut)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Router__queryNoSplit1ResultValue0Struct>(value[0].toTuple())
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  trustedTokensCount(): BigInt {
    let result = super.call(
      "trustedTokensCount",
      "trustedTokensCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_trustedTokensCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "trustedTokensCount",
      "trustedTokensCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _adapters(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _trustedTokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get _feeClaimer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _wrapped_native(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddMaintainerCall extends ethereum.Call {
  get inputs(): AddMaintainerCall__Inputs {
    return new AddMaintainerCall__Inputs(this);
  }

  get outputs(): AddMaintainerCall__Outputs {
    return new AddMaintainerCall__Outputs(this);
  }
}

export class AddMaintainerCall__Inputs {
  _call: AddMaintainerCall;

  constructor(call: AddMaintainerCall) {
    this._call = call;
  }

  get addedMaintainer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddMaintainerCall__Outputs {
  _call: AddMaintainerCall;

  constructor(call: AddMaintainerCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RecoverAVAXCall extends ethereum.Call {
  get inputs(): RecoverAVAXCall__Inputs {
    return new RecoverAVAXCall__Inputs(this);
  }

  get outputs(): RecoverAVAXCall__Outputs {
    return new RecoverAVAXCall__Outputs(this);
  }
}

export class RecoverAVAXCall__Inputs {
  _call: RecoverAVAXCall;

  constructor(call: RecoverAVAXCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RecoverAVAXCall__Outputs {
  _call: RecoverAVAXCall;

  constructor(call: RecoverAVAXCall) {
    this._call = call;
  }
}

export class RecoverERC20Call extends ethereum.Call {
  get inputs(): RecoverERC20Call__Inputs {
    return new RecoverERC20Call__Inputs(this);
  }

  get outputs(): RecoverERC20Call__Outputs {
    return new RecoverERC20Call__Outputs(this);
  }
}

export class RecoverERC20Call__Inputs {
  _call: RecoverERC20Call;

  constructor(call: RecoverERC20Call) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RecoverERC20Call__Outputs {
  _call: RecoverERC20Call;

  constructor(call: RecoverERC20Call) {
    this._call = call;
  }
}

export class RemoveMaintainerCall extends ethereum.Call {
  get inputs(): RemoveMaintainerCall__Inputs {
    return new RemoveMaintainerCall__Inputs(this);
  }

  get outputs(): RemoveMaintainerCall__Outputs {
    return new RemoveMaintainerCall__Outputs(this);
  }
}

export class RemoveMaintainerCall__Inputs {
  _call: RemoveMaintainerCall;

  constructor(call: RemoveMaintainerCall) {
    this._call = call;
  }

  get removedMaintainer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveMaintainerCall__Outputs {
  _call: RemoveMaintainerCall;

  constructor(call: RemoveMaintainerCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RenounceRole1Call extends ethereum.Call {
  get inputs(): RenounceRole1Call__Inputs {
    return new RenounceRole1Call__Inputs(this);
  }

  get outputs(): RenounceRole1Call__Outputs {
    return new RenounceRole1Call__Outputs(this);
  }
}

export class RenounceRole1Call__Inputs {
  _call: RenounceRole1Call;

  constructor(call: RenounceRole1Call) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class RenounceRole1Call__Outputs {
  _call: RenounceRole1Call;

  constructor(call: RenounceRole1Call) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAdaptersCall extends ethereum.Call {
  get inputs(): SetAdaptersCall__Inputs {
    return new SetAdaptersCall__Inputs(this);
  }

  get outputs(): SetAdaptersCall__Outputs {
    return new SetAdaptersCall__Outputs(this);
  }
}

export class SetAdaptersCall__Inputs {
  _call: SetAdaptersCall;

  constructor(call: SetAdaptersCall) {
    this._call = call;
  }

  get _adapters(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class SetAdaptersCall__Outputs {
  _call: SetAdaptersCall;

  constructor(call: SetAdaptersCall) {
    this._call = call;
  }
}

export class SetFeeClaimerCall extends ethereum.Call {
  get inputs(): SetFeeClaimerCall__Inputs {
    return new SetFeeClaimerCall__Inputs(this);
  }

  get outputs(): SetFeeClaimerCall__Outputs {
    return new SetFeeClaimerCall__Outputs(this);
  }
}

export class SetFeeClaimerCall__Inputs {
  _call: SetFeeClaimerCall;

  constructor(call: SetFeeClaimerCall) {
    this._call = call;
  }

  get _claimer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeClaimerCall__Outputs {
  _call: SetFeeClaimerCall;

  constructor(call: SetFeeClaimerCall) {
    this._call = call;
  }
}

export class SetMinFeeCall extends ethereum.Call {
  get inputs(): SetMinFeeCall__Inputs {
    return new SetMinFeeCall__Inputs(this);
  }

  get outputs(): SetMinFeeCall__Outputs {
    return new SetMinFeeCall__Outputs(this);
  }
}

export class SetMinFeeCall__Inputs {
  _call: SetMinFeeCall;

  constructor(call: SetMinFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinFeeCall__Outputs {
  _call: SetMinFeeCall;

  constructor(call: SetMinFeeCall) {
    this._call = call;
  }
}

export class SetTrustedTokensCall extends ethereum.Call {
  get inputs(): SetTrustedTokensCall__Inputs {
    return new SetTrustedTokensCall__Inputs(this);
  }

  get outputs(): SetTrustedTokensCall__Outputs {
    return new SetTrustedTokensCall__Outputs(this);
  }
}

export class SetTrustedTokensCall__Inputs {
  _call: SetTrustedTokensCall;

  constructor(call: SetTrustedTokensCall) {
    this._call = call;
  }

  get _trustedTokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class SetTrustedTokensCall__Outputs {
  _call: SetTrustedTokensCall;

  constructor(call: SetTrustedTokensCall) {
    this._call = call;
  }
}

export class SwapNoSplitCall extends ethereum.Call {
  get inputs(): SwapNoSplitCall__Inputs {
    return new SwapNoSplitCall__Inputs(this);
  }

  get outputs(): SwapNoSplitCall__Outputs {
    return new SwapNoSplitCall__Outputs(this);
  }
}

export class SwapNoSplitCall__Inputs {
  _call: SwapNoSplitCall;

  constructor(call: SwapNoSplitCall) {
    this._call = call;
  }

  get _trade(): SwapNoSplitCall_tradeStruct {
    return changetype<SwapNoSplitCall_tradeStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _fee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SwapNoSplitCall__Outputs {
  _call: SwapNoSplitCall;

  constructor(call: SwapNoSplitCall) {
    this._call = call;
  }
}

export class SwapNoSplitCall_tradeStruct extends ethereum.Tuple {
  get amountIn(): BigInt {
    return this[0].toBigInt();
  }

  get amountOut(): BigInt {
    return this[1].toBigInt();
  }

  get path(): Array<Address> {
    return this[2].toAddressArray();
  }

  get adapters(): Array<Address> {
    return this[3].toAddressArray();
  }
}

export class SwapNoSplitFromAVAXCall extends ethereum.Call {
  get inputs(): SwapNoSplitFromAVAXCall__Inputs {
    return new SwapNoSplitFromAVAXCall__Inputs(this);
  }

  get outputs(): SwapNoSplitFromAVAXCall__Outputs {
    return new SwapNoSplitFromAVAXCall__Outputs(this);
  }
}

export class SwapNoSplitFromAVAXCall__Inputs {
  _call: SwapNoSplitFromAVAXCall;

  constructor(call: SwapNoSplitFromAVAXCall) {
    this._call = call;
  }

  get _trade(): SwapNoSplitFromAVAXCall_tradeStruct {
    return changetype<SwapNoSplitFromAVAXCall_tradeStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _fee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SwapNoSplitFromAVAXCall__Outputs {
  _call: SwapNoSplitFromAVAXCall;

  constructor(call: SwapNoSplitFromAVAXCall) {
    this._call = call;
  }
}

export class SwapNoSplitFromAVAXCall_tradeStruct extends ethereum.Tuple {
  get amountIn(): BigInt {
    return this[0].toBigInt();
  }

  get amountOut(): BigInt {
    return this[1].toBigInt();
  }

  get path(): Array<Address> {
    return this[2].toAddressArray();
  }

  get adapters(): Array<Address> {
    return this[3].toAddressArray();
  }
}

export class SwapNoSplitToAVAXCall extends ethereum.Call {
  get inputs(): SwapNoSplitToAVAXCall__Inputs {
    return new SwapNoSplitToAVAXCall__Inputs(this);
  }

  get outputs(): SwapNoSplitToAVAXCall__Outputs {
    return new SwapNoSplitToAVAXCall__Outputs(this);
  }
}

export class SwapNoSplitToAVAXCall__Inputs {
  _call: SwapNoSplitToAVAXCall;

  constructor(call: SwapNoSplitToAVAXCall) {
    this._call = call;
  }

  get _trade(): SwapNoSplitToAVAXCall_tradeStruct {
    return changetype<SwapNoSplitToAVAXCall_tradeStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _fee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SwapNoSplitToAVAXCall__Outputs {
  _call: SwapNoSplitToAVAXCall;

  constructor(call: SwapNoSplitToAVAXCall) {
    this._call = call;
  }
}

export class SwapNoSplitToAVAXCall_tradeStruct extends ethereum.Tuple {
  get amountIn(): BigInt {
    return this[0].toBigInt();
  }

  get amountOut(): BigInt {
    return this[1].toBigInt();
  }

  get path(): Array<Address> {
    return this[2].toAddressArray();
  }

  get adapters(): Array<Address> {
    return this[3].toAddressArray();
  }
}

export class SwapNoSplitToAVAXWithPermitCall extends ethereum.Call {
  get inputs(): SwapNoSplitToAVAXWithPermitCall__Inputs {
    return new SwapNoSplitToAVAXWithPermitCall__Inputs(this);
  }

  get outputs(): SwapNoSplitToAVAXWithPermitCall__Outputs {
    return new SwapNoSplitToAVAXWithPermitCall__Outputs(this);
  }
}

export class SwapNoSplitToAVAXWithPermitCall__Inputs {
  _call: SwapNoSplitToAVAXWithPermitCall;

  constructor(call: SwapNoSplitToAVAXWithPermitCall) {
    this._call = call;
  }

  get _trade(): SwapNoSplitToAVAXWithPermitCall_tradeStruct {
    return changetype<SwapNoSplitToAVAXWithPermitCall_tradeStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _fee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class SwapNoSplitToAVAXWithPermitCall__Outputs {
  _call: SwapNoSplitToAVAXWithPermitCall;

  constructor(call: SwapNoSplitToAVAXWithPermitCall) {
    this._call = call;
  }
}

export class SwapNoSplitToAVAXWithPermitCall_tradeStruct extends ethereum.Tuple {
  get amountIn(): BigInt {
    return this[0].toBigInt();
  }

  get amountOut(): BigInt {
    return this[1].toBigInt();
  }

  get path(): Array<Address> {
    return this[2].toAddressArray();
  }

  get adapters(): Array<Address> {
    return this[3].toAddressArray();
  }
}

export class SwapNoSplitWithPermitCall extends ethereum.Call {
  get inputs(): SwapNoSplitWithPermitCall__Inputs {
    return new SwapNoSplitWithPermitCall__Inputs(this);
  }

  get outputs(): SwapNoSplitWithPermitCall__Outputs {
    return new SwapNoSplitWithPermitCall__Outputs(this);
  }
}

export class SwapNoSplitWithPermitCall__Inputs {
  _call: SwapNoSplitWithPermitCall;

  constructor(call: SwapNoSplitWithPermitCall) {
    this._call = call;
  }

  get _trade(): SwapNoSplitWithPermitCall_tradeStruct {
    return changetype<SwapNoSplitWithPermitCall_tradeStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _fee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _deadline(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get _s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class SwapNoSplitWithPermitCall__Outputs {
  _call: SwapNoSplitWithPermitCall;

  constructor(call: SwapNoSplitWithPermitCall) {
    this._call = call;
  }
}

export class SwapNoSplitWithPermitCall_tradeStruct extends ethereum.Tuple {
  get amountIn(): BigInt {
    return this[0].toBigInt();
  }

  get amountOut(): BigInt {
    return this[1].toBigInt();
  }

  get path(): Array<Address> {
    return this[2].toAddressArray();
  }

  get adapters(): Array<Address> {
    return this[3].toAddressArray();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
